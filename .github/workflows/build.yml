name: Docker Build & Publish

on:
  push:
    branches: [main]

  # This workflow dispatch, allows us to execute this workflow manually
  workflow_dispatch:

env:
  IMAGE_NAME: "harbor.kub3.dev/kub3dev/confeitaria"
  BUILD_NUMBER: "$(date '+%Y.%-m.%-d.%-H.%-M.%-S')"

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build Docker
    runs-on: ubuntu-latest
    needs: [analyze]

    steps:
      - name: Check out repository code üõéÔ∏è
        uses: actions/checkout@v4

      - name: Set up Docker Buildx üöÄ
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub üö¢
        uses: docker/login-action@v3
        with:
          registry: harbor.kub3.dev
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push üèóÔ∏è
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./.nixpacks/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.BUILD_NUMBER }}
            ${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [analyze, build]

    steps:
      - uses: actions/checkout@v3
        with:
          repository: github.com/kub3dev/devops.git
          ref: "main"
          token: ${{ secrets.CD_ACTIONS_GITHUB_TOKEN }}
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "deploy@kub3.dev"
      - name: commit changes
        run: |
          cd apps/production/confeitaria
          sed -E -i.bak 's%(${{ env.IMAGE_NAME }}:).*%${{ env.IMAGE_NAME }}:${{ env.BUILD_NUMBER }}%' deployment.yaml
          git add .
          git commit -m "chore: deploy ${{ env.BUILD_NUMBER }}"
      - name: push changes
        run: git push origin main
